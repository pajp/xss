<?xml version="1.0" encoding="iso-8859-1"?>

<!--
  Ant build spec for XSS and related code.
  $Id$

-->

<project name="xss" default="server" basedir=".">
  <target name="init">
    <tstamp/>
    <property name="project.version" value="0.9.5"/>
    <property name="project.name" value="XSS"/>
    <property name="project.dir"  value="${basedir}"/>
    <property name="project.src"  value="${basedir}/src"/>
    <property name="project.classes" value="${basedir}/classes"/>
    <property name="project.libs" value="${basedir}/jars"/>

    <property name="project.compiler.optimization" value="off"/>
    <property name="project.compiler.debug" value="on"/>
    <property name="project.compiler.deprecation" value="on"/>
  </target>

  <target name="javadoc" depends="init">
    <javadoc sourcepath="${project.src}" destdir="${project.dir}/docs"
             Public="true" Author="true" Use="true"
             windowtitle="Bricole XSS ${project.version} API documentation" >

      <bottom><![CDATA[<i>Copyright &#169; 2001-2003 <a href="http://www.bricole.se/">Bricole datakonsulttj&auml;nster</a></i>]]></bottom>
      <packageset dir="${project.src}" />
      <group title="XSS standard classes" packages="se.bricole.xss.*" />
      <group title="Example classes" packages="com.example" />
      <classpath>
        <pathelement location="${project.libs}/js.jar"/>
        <pathelement location="${project.libs}/xml4j.jar"/>
        <pathelement location="${project.libs}/xerces.jar"/>
        <pathelement path="${java.class.path}/"/>
        <pathelement path="${additional.path}"/>
      </classpath>
    </javadoc>

    <copy todir="${project.dir}/webpage/new/apidocs">
      <fileset dir="${project.dir}/docs" />
    </copy>


  </target>


  <target name="server" depends="init">
    <mkdir dir="${project.classes}"/>
    <javac srcdir="${project.src}"
           destdir="${project.classes}"
           debug="${project.compiler.debug}"
           optimize="${project.compiler.optimization}"
           deprecation="${project.compiler.deprecation}"
           compiler="jikes"
     >
        <classpath>
          <pathelement location="${project.libs}/xml4.jar"/>
          <pathelement location="${project.libs}/xerces.jar"/>
          <pathelement location="${project.libs}/js.jar"/>
          <pathelement path="${java.class.path}/"/>
          <pathelement path="${additional.path}"/>
        </classpath>
    </javac>
  </target>

  <!-- copies everything but the java sources to the 'classes' dir -->
  <target name="copy" depends="init">
    <mkdir dir="${project.classes}"/>
    <copy todir="${project.classes}">
      <fileset dir="${project.src}">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>

  <target name="jar" depends="init,server,copy">
	<mkdir dir="${project.dir}/dist/jars" />
	<jar destfile="${project.dir}/dist/jars/xsserver.jar"
		 basedir="${project.dir}/classes"
		 excludes="*.java">
	  <manifest>
      	<attribute name="Built-By" value="${user.name}"/>
		<attribute name="Main-Class" value="se.bricole.xss.server.Server"/>
	  </manifest>
	</jar>
  </target>

  <target name="dist" depends="init,server,jar,copy">
    <!-- delete dir="${project.dir}/dist"/ -->
    <mkdir dir="${project.dir}/dist"/>

	<!--
    <mkdir dir="${project.dir}/dist/classes"/>
    <copy todir="${project.dir}/dist/classes">
      <fileset dir="${project.classes}" />
    </copy>
	-->

    <copy file="${project.dir}/config.xml.dist" tofile="${project.dir}/classes/se/bricole/xss/default-config.xml" />
	
    <mkdir dir="${project.dir}/dist/docs"/>
    <copy todir="${project.dir}/dist/docs">
      <fileset dir="${project.dir}/docs" />
    </copy>
	
	

    <mkdir dir="${project.dir}/dist/bin"/>
    <copy todir="${project.dir}/dist/bin">
      <fileset dir="${project.dir}/bin" />
    </copy>

    <mkdir dir="${project.dir}/dist/ecmascripts" />
    <copy todir="${project.dir}/dist/ecmascripts">
      <fileset dir="${project.dir}/ecmascripts" />
    </copy>

    <mkdir dir="${project.dir}/dist/jars" />
    <copy todir="${project.dir}/dist/jars">
      <fileset dir="${project.dir}/jars" />
    </copy>


    <mkdir dir="${project.dir}/dist/flash" />
    <copy todir="${project.dir}/dist/flash">
      <fileset dir="${project.dir}/flash" />
    </copy>

    <copy file="${project.dir}/INSTALL.txt" todir="${project.dir}/dist" />
    <copy file="${project.dir}/README.txt" todir="${project.dir}/dist" />
    <copy file="${project.dir}/TODO" todir="${project.dir}/dist" />
    <copy file="${project.dir}/ASL.txt" todir="${project.dir}/dist" />
    <copy file="${project.dir}/config.xml.dist" tofile="${project.dir}/dist/config.xml" />

	<signjar jar="${project.dir}/dist/jars/xsserver.jar" storepass="asdasdasd" alias="rasmus" />
	
	<mkdir dir="${project.dir}/release" />

	
	<exec executable="makensis">
		<arg value="${project.dir}/xss.nsi" />
	</exec>
	
	<delete file="${project.dir}/release/bricole_xss-${project.version}.jar" />
	<jar destfile="${project.dir}/release/bricole_xss-${project.version}.jar"
		 basedir="${project.dir}/classes">
	  <manifest>
      	<attribute name="Built-By" value="${user.name}"/>
		<attribute name="Main-Class" value="se.bricole.xss.server.Server"/>
		<attribute name="Class-Path" value="jars/xsserver.jar jars/js.jar jars/xerces.jar jars/xml4j.jar jars/fesi.jar"/>
	  </manifest>
	</jar>

	<signjar jar="${project.dir}/release/bricole_xss-${project.version}.jar" storepass="asdasdasd" alias="rasmus" />

	<delete file="${project.dir}/bricole_xss-${project.version}.zip" />
	<zip destfile="${project.dir}/release/bricole_xss-${project.version}.zip" 
		 basedir="${project.dir}/dist">
	</zip>

	<delete file="${project.dir}/bricole_xss-${project.version}.tar" />
	<tar destfile="${project.dir}/bricole_xss-${project.version}.tar" 
		 basedir="${project.dir}/dist">
	</tar>

    <gzip src="${project.dir}/bricole_xss-${project.version}.tar"
		  zipfile="${project.dir}/release/bricole_xss-${project.version}.tar.gz" />
		  
    <bzip2 src="${project.dir}/bricole_xss-${project.version}.tar"
		   zipfile="${project.dir}/release/bricole_xss-${project.version}.tar.bz2" />
	
  </target>

  <!-- compile the server and copy class files to 'classes' dir -->
  <target name="build" depends="init,server,copy" />

  <!-- deletes all class files -->
  <target name="clean" depends="init">
    <delete dir="${project.classes}"/>
    <delete dir="${project.dir}/dist"/>
  </target>


</project>